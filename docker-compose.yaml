x-logging: &default-logging
  driver: loki
  options:
    loki-url: 'http://localhost:3100/api/prom/push'
    labels: namespace
    loki-relabel-config: |
      - action: replace
        source_labels: ["namespace","compose_service"]
        separator: "/"
        target_label: job
      - action: replace
        source_labels: ["container_name"]
        target_label: instance
version: "3"
services:
  
  loki:
    container_name: loki
    restart: always
    hostname: loki
    image: grafana/loki
    volumes:
      - ./etc/loki-local.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    environment:
      TZ: America/Mexico_City
    ports:
      - 3100:3100
      
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    hostname: prometheus
    environment:
      TZ: America/Mexico_City
    ports:
      - 9090:9090
    volumes:
      - ./etc/prometheus.yaml:/etc/prometheus/prometheus.yml
    logging: *default-logging
    
  grafana:
    image: grafana/grafana
    volumes:
      - ./data/grafana-data/datasources:/etc/grafana/provisioning/datasources
      - ./data/grafana-data/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./data/grafana-data/dashboards:/var/lib/grafana/dashboards
    environment:
      - TZ=America/Mexico_City
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    logging: *default-logging
    
  jeager:
    image: jaegertracing/all-in-one:latest
    hostname: jeager
    container_name: jeager
    environment:
      TZ: America/Mexico_City
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    logging: *default-logging
  
  client:
    image: client
    container_name: client
    hostname: client
    environment:
      TZ: America/Mexico_City
      DATASOURCES_DEFAULT_URL: jdbc:postgresql://client-db:5432/client
      OTEL_TRACES_EXPORTER: jaeger
      OTEL_EXPORTER_JAEGER_ENDPOINT: http://jeager:14250
      OTEL_SERVICE_NAME: clients
      OTEL_METRICS_EXPORTER: none
    ports:
      - "8081:8081"
#    entrypoint: ["java", "-javaagent:/opentelemetry-javaagent-all.jar", "-Xshare:off","-jar", "/home/app/application.jar"]
#    entrypoint: java -javaagent:/opentelemetry-javaagent-all.jar -Xshare:off -jar /home/app/application.jar
#    volumes:
#      - /Users/brauliocasanas/demos/s02/opentelemetry-javaagent-all.jar:/opentelemetry-javaagent-all.jar
    depends_on:
      - client-db
    logging: *default-logging
    
  store:
    image: store
    container_name: store
    hostname: store
    environment:
      TZ: America/Mexico_City
      DATASOURCES_DEFAULT_URL: jdbc:postgresql://store-db:5432/store
    ports:
      - "8082:8082"
    depends_on:
      - store-db
    logging: *default-logging
  
  client-db:
    image: postgres:alpine
    container_name: client-db
    hostname: client-db
    environment:
      TZ: America/Mexico_City
      POSTGRES_USER: usr01
      POSTGRES_PASSWORD: 5Z8Qn3NSdTT1xa
      POSTGRES_DB: client
    ports:
      - "5431:5432"
    logging: *default-logging
    
  store-db:
    image: postgres:alpine
    container_name: store-db
    hostname: store-db
    environment:
      TZ: America/Mexico_City
      POSTGRES_USER: usr02
      POSTGRES_PASSWORD: XrRVlUr6SCIHVo
      POSTGRES_DB: store
    ports:
      - "5432:5432"
    logging: *default-logging